{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAoBA,MAAMC,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAEN,MAAMC,EAAW,IAAIC,SAASP,GACxBQ,EAAQC,SAASH,EAASI,IAAI,UAC9BC,EAAOF,SAASH,EAASI,IAAI,SAC7BE,EAASH,SAASH,EAASI,IAAI,YAErC,WACE,IAAIG,EAAkB,GAEtB,SAASC,IACHD,GAAmBD,GA/B7B,SAAuBG,EAAUP,GAC/B,OAAO,IAAIQ,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAYC,KAAKC,MACjBC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACT,MACMC,EADUN,KAAKC,MACKF,EAEtBG,EACFL,EAAQ,C,SAAEF,E,QAAUW,IAEpBR,EAAO,C,SAAEH,E,QAAUW,GAAU,GAE9BlB,EAAM,G,CAkBLmB,CAAcd,EAAiBL,GAC5BoB,MAAK,EAACb,SAAEA,EAAQW,QAAEA,MACjBG,EAAA/B,GAASgC,OAAOC,QACd,uBAAqBhB,QAAiBW,MAAY,IAGrDM,OAAM,EAACjB,SAAEA,EAAQW,QAAEA,MAClBG,EAAA/B,GAASgC,OAAOG,QACd,sBAAoBlB,QAAeW,MAAY,IAGlDQ,SAAQ,KACPrB,IACAY,WAAWX,EAAyBH,EAAK,G,CAKjDG,E,CAGFqB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const startTime = Date.now();\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      const endTime = Date.now();\n      const elapsed = endTime - startTime;\n\n      if (shouldResolve) {\n        resolve({ position, elapsed });\n      } else {\n        reject({ position, elapsed });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const formData = new FormData(form);\n  const delay = parseInt(formData.get('delay'));\n  const step = parseInt(formData.get('step'));\n  const amount = parseInt(formData.get('amount'));\n\n  function createAndExecutePromises() {\n    let currentPosition = 1;\n\n    function createAndExecutePromise() {\n      if (currentPosition <= amount) {\n        createPromise(currentPosition, delay)\n          .then(({ position, elapsed }) => {\n            Notiflix.Notify.success(\n              `✅ Fulfilled promise ${position} in ${elapsed}ms`\n            );\n          })\n          .catch(({ position, elapsed }) => {\n            Notiflix.Notify.failure(\n              `❌ Rejected promise ${position} in ${elapsed}ms`\n            );\n          })\n          .finally(() => {\n            currentPosition++;\n            setTimeout(createAndExecutePromise, step);\n          });\n      }\n    }\n\n    createAndExecutePromise();\n  }\n\n  createAndExecutePromises();\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","addEventListener","event","preventDefault","formData","FormData","delay","parseInt","get","step","amount","currentPosition","createAndExecutePromise","position","Promise","resolve","reject","startTime","Date","now","shouldResolve","Math","random","setTimeout","elapsed","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","catch","failure","finally","createAndExecutePromises"],"version":3,"file":"03-promises.9f0c4ca1.js.map"}