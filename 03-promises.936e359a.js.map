{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAoBA,IAAMC,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAEN,IAMMC,EANAC,EAAW,IAAIC,SAASR,GACxBS,EAAQC,SAASH,EAASI,IAAI,UAC9BC,EAAOF,SAASH,EAASI,IAAI,SAC7BE,EAASH,SAASH,EAASI,IAAI,WAG/BL,EAAkB,EAEtB,SAASQ,IACHR,GAAmBO,GA/B7B,SAAuBE,EAAUN,GAC/B,OAAO,IAAIO,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAYC,KAAKC,MACjBC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACT,IACMC,EADUN,KAAKC,MACKF,EAEtBG,EACFL,EAAQ,CAAEF,WAAUW,YAEpBR,EAAO,CAAEH,WAAUW,W,GAEpBjB,E,IAkBCkB,CAAcrB,EAAiBG,GAC5BmB,MAAK,SAAAC,G,IAAGd,EAAQc,EAARd,SAAUW,EAAOG,EAAPH,QACjBI,EAAAhC,GAASiC,OAAOC,QACd,uBAAwCC,OAAflB,EAAS,QAAckB,OAARP,EAAQ,M,IAGnDQ,OAAM,SAAAL,G,IAAGd,EAAQc,EAARd,SAAUW,EAAOG,EAAPH,QAClBI,EAAAhC,GAASiC,OAAOI,QACd,sBAAqCF,OAAflB,EAAS,QAAckB,OAARP,EAAQ,M,IAGhDU,SAAQ,WACP9B,IACAmB,WAAWX,EAAyBF,E,IAK5CE,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const startTime = Date.now();\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      const endTime = Date.now();\n      const elapsed = endTime - startTime;\n\n      if (shouldResolve) {\n        resolve({ position, elapsed });\n      } else {\n        reject({ position, elapsed });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const formData = new FormData(form);\n  const delay = parseInt(formData.get('delay'));\n  const step = parseInt(formData.get('step'));\n  const amount = parseInt(formData.get('amount'));\n\n  function createAndExecutePromises() {\n    let currentPosition = 1;\n\n    function createAndExecutePromise() {\n      if (currentPosition <= amount) {\n        createPromise(currentPosition, delay)\n          .then(({ position, elapsed }) => {\n            Notiflix.Notify.success(\n              `✅ Fulfilled promise ${position} in ${elapsed}ms`\n            );\n          })\n          .catch(({ position, elapsed }) => {\n            Notiflix.Notify.failure(\n              `❌ Rejected promise ${position} in ${elapsed}ms`\n            );\n          })\n          .finally(() => {\n            currentPosition++;\n            setTimeout(createAndExecutePromise, step);\n          });\n      }\n    }\n\n    createAndExecutePromise();\n  }\n\n  createAndExecutePromises();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","currentPosition","formData","FormData","delay","parseInt","get","step","amount","createAndExecutePromise","position","Promise","resolve","reject","startTime","Date","now","shouldResolve","Math","random","setTimeout","elapsed","$ce04d3a99e08e73b$var$createPromise","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","finally"],"version":3,"file":"03-promises.936e359a.js.map"}